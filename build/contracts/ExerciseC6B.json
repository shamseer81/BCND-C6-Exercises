{
  "contractName": "ExerciseC6B",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ExerciseC6B.sol\":\"ExerciseC6B\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ExerciseC6B.sol\":{\"keccak256\":\"0x8737f40bd9710d8d2cdf0c0f1f4591476300c93cbc3b1225aa04f8f4c768b930\",\"urls\":[\"bzz-raw://2095689d7e5515fbd72e2a4f68c04f135dfdd643bd64f1bf1a1b7bdbb27132ef\",\"dweb:/ipfs/QmTKgHVVCJKbA4YHXTqvrv1uAF45JdmbLLWNtATPGeQ3g4\"]},\"project:/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x662f28720414b30b3a9fbfd59f4576fbf12e6483cb7af391916227a522ca491e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6da0e10fbb4c6aa15ad3fa0555fd9680609d52735f8e65b2fd5c71c9668dc189\",\"dweb:/ipfs/QmTgZp7qALjG9sFZ2UA4jMWAFdbs8BSgzRNuLnYcy38nQR\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603f80605d6000396000f3fe6080604052600080fdfea2646970667358221220dc746bfb20a0f4c0fc59ee1483cf70b5e47483456536480826de14215bd3c8b764736f6c63430008120033",
  "deployedBytecode": "0x6080604052600080fdfea2646970667358221220dc746bfb20a0f4c0fc59ee1483cf70b5e47483456536480826de14215bd3c8b764736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "403:1707:1:-:0;;;964:125;;;;;;;;;;1071:10;1055:13;;:26;;;;;;;;;;;;;;;;;;403:1707;;;;;;",
  "deployedSourceMap": "403:1707:1:-:0;;;;;",
  "source": "pragma solidity ^0.8.00;\r\n\r\n// It's important to avoid vulnerabilities due to numeric overflow bugs\r\n// OpenZeppelin's SafeMath library, when used correctly, protects agains such bugs\r\n// More info: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2018/november/smart-contract-insecurity-bad-arithmetic/\r\n\r\nimport \"../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\r\n\r\n\r\ncontract ExerciseC6B {\r\n    using SafeMath for uint256; // Allow SafeMath functions to be called for all uint256 types (similar to \"prototype\" in Javascript)\r\n\r\n    /********************************************************************************************/\r\n    /*                                       DATA VARIABLES                                     */\r\n    /********************************************************************************************/\r\n\r\n\r\n    address private contractOwner;                  // Account used to deploy contract\r\n\r\n\r\n    constructor\r\n                (\r\n                )\r\n                public \r\n    {\r\n        contractOwner = msg.sender;\r\n    }\r\n   \r\n    /********************************************************************************************/\r\n    /*                                       FUNCTION MODIFIERS                                 */\r\n    /********************************************************************************************/\r\n\r\n    // Modifiers help avoid duplication of code. They are typically used to validate something\r\n    // before a function is allowed to be executed.\r\n\r\n    /**\r\n    * @dev Modifier that requires the \"ContractOwner\" account to be the function caller\r\n    */\r\n    modifier requireContractOwner()\r\n    {\r\n        require(msg.sender == contractOwner, \"Caller is not contract owner\");\r\n        _;\r\n    }\r\n\r\n    /********************************************************************************************/\r\n    /*                                     SMART CONTRACT FUNCTIONS                             */\r\n    /********************************************************************************************/\r\n\r\n\r\n    \r\n}\r\n\r\n",
  "sourcePath": "C:\\Users\\shams\\BlockChainTraining\\BCND\\BCND-C6-Exercises\\contracts\\ExerciseC6B.sol",
  "ast": {
    "absolutePath": "project:/contracts/ExerciseC6B.sol",
    "exportedSymbols": {
      "ExerciseC6B": [
        160
      ],
      "SafeMath": [
        904
      ]
    },
    "id": 161,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 131,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".00"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "project:/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 132,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 161,
        "sourceUnit": 905,
        "src": "322:75:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ExerciseC6B",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 160,
        "linearizedBaseContracts": [
          160
        ],
        "name": "ExerciseC6B",
        "nameLocation": "412:11:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 135,
            "libraryName": {
              "id": 133,
              "name": "SafeMath",
              "nameLocations": [
                "437:8:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 904,
              "src": "437:8:1"
            },
            "nodeType": "UsingForDirective",
            "src": "431:27:1",
            "typeName": {
              "id": 134,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "450:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 137,
            "mutability": "mutable",
            "name": "contractOwner",
            "nameLocation": "888:13:1",
            "nodeType": "VariableDeclaration",
            "scope": 160,
            "src": "872:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 136,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "872:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "1044:45:1",
              "statements": [
                {
                  "expression": {
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 140,
                      "name": "contractOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "1055:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 141,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1071:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1075:6:1",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1071:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1055:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1055:26:1"
                }
              ]
            },
            "id": 146,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "993:20:1"
            },
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1044:0:1"
            },
            "scope": 160,
            "src": "964:125:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "1696:99:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 150,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1715:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1719:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1715:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 152,
                          "name": "contractOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 137,
                          "src": "1729:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1715:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f7420636f6e7472616374206f776e6572",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1744:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3",
                          "typeString": "literal_string \"Caller is not contract owner\""
                        },
                        "value": "Caller is not contract owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3",
                          "typeString": "literal_string \"Caller is not contract owner\""
                        }
                      ],
                      "id": 149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1707:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1707:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "1707:68:1"
                },
                {
                  "id": 157,
                  "nodeType": "PlaceholderStatement",
                  "src": "1786:1:1"
                }
              ]
            },
            "documentation": {
              "id": 147,
              "nodeType": "StructuredDocumentation",
              "src": "1553:100:1",
              "text": " @dev Modifier that requires the \"ContractOwner\" account to be the function caller"
            },
            "id": 159,
            "name": "requireContractOwner",
            "nameLocation": "1668:20:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1688:2:1"
            },
            "src": "1659:136:1",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 161,
        "src": "403:1707:1",
        "usedErrors": []
      }
    ],
    "src": "0:2114:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-02-20T17:12:52.800Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}